services:
  neo4j:
    image: neo4j:5.26.2-enterprise  # Or remove -enterprise if using Community
    restart: unless-stopped
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      # Authentication
      - NEO4J_AUTH=${NEO4J_USER:-neo4j}/${NEO4J_PASSWORD:-demodemo}
      
      # Memory configuration
      - NEO4J_server_memory_heap_initial__size=1G
      - NEO4J_server_memory_heap_max__size=2G
      - NEO4J_server_memory_pagecache_size=1G
      
      # Bolt connection settings - CRITICAL FOR YOUR ISSUE
      - NEO4J_server_bolt_connection_keep__alive_type=ALL
      - NEO4J_dbms_connector_bolt_thread__pool__keep__alive=5m
      - NEO4J_db_transaction_timeout=5m
      
      # Network buffer settings to prevent ClosedChannelException
      - NEO4J_server_bolt_listen_address=0.0.0.0:7687
      - NEO4J_server_http_listen_address=0.0.0.0:7474
      
    volumes:
      - /volume1/docker/graphiti/data:/data
      - /volume1/docker/graphiti/logs:/logs
    
    healthcheck:
      test: ["CMD-SHELL", "cypher-shell -u ${NEO4J_USER:-neo4j} -p ${NEO4J_PASSWORD:-demodemo} 'RETURN 1' || exit 1"]
      interval: 10s      # Changed from 1s
      timeout: 10s
      retries: 5         # Changed from 10
      start_period: 40s  # Changed from 3s - Neo4j needs time to start

  graphiti-mcp:
    build:
      context: .
    env_file:
      - path: .env
        required: false
    depends_on:
      neo4j:
        condition: service_healthy
    restart: unless-stopped
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=${NEO4J_USER:-neo4j}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD:-demodemo}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - MODEL_NAME=${MODEL_NAME}
      - PATH=/root/.local/bin:${PATH}
      - SEMAPHORE_LIMIT=${SEMAPHORE_LIMIT:-10}
      
      # Add these for Neo4j driver timeout configuration
      - NEO4J_MAX_CONNECTION_LIFETIME=3600
      - NEO4J_CONNECTION_TIMEOUT=30
      - NEO4J_MAX_CONNECTION_POOL_SIZE=50
      
    ports:
      - "7999:8000"
    command: ["uv", "run", "graphiti_mcp_server.py", "--transport", "sse"]
